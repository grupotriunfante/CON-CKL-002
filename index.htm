
<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Checklist Diário</title>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      margin: 30px;
      background-color: #f8f9fa;
      color: #333;
      transition: all 0.3s ease-in-out;
    }
    h1 {
      text-align: center;
      color: #007bff;
      font-size: 2.5em;
      margin-bottom: 20px;
      animation: fadeIn 1s ease-out;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      animation: slideIn 1s ease-out;
    }
    th, td {
      border: 1px solid #ccc;
      padding: 12px;
      text-align: left;
      font-size: 14px;
      transition: all 0.3s ease-in-out;
    }
    th {
      background-color: #e9ecef;
      color: #007bff;
    }
    td:hover {
      background-color: #f1f1f1;
      cursor: pointer;
    }
    .form-container {
      margin-bottom: 20px;
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      animation: fadeInUp 1s ease-out;
    }
    .form-container label {
      font-size: 14px;
      margin-right: 10px;
      color: #333;
      width: 100%;
    }
    .form-container input, .form-container select {
      padding: 8px;
      margin-right: 15px;
      font-size: 14px;
      border-radius: 4px;
      border: 1px solid #ccc;
      transition: border-color 0.3s ease-in-out;
      margin-bottom: 10px;
      width: 48%;
    }
    .form-container input:focus, .form-container select:focus {
      border-color: #007bff;
    }
    .form-container button {
      padding: 12px 25px;
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: 16px;
      margin-top: 20px;
      transition: all 0.3s ease-in-out;
    }
    .form-container button:hover {
      background-color: #0056b3;
      transform: scale(1.05);
    }
    @keyframes fadeIn {
      0% { opacity: 0; transform: translateY(-20px); }
      100% { opacity: 1; transform: translateY(0); }
    }
    @keyframes slideIn {
      0% { transform: translateX(-100%); }
      100% { transform: translateX(0); }
    }
    @keyframes fadeInUp {
      0% { opacity: 0; transform: translateY(30px); }
      100% { opacity: 1; transform: translateY(0); }
    }
  </style>
</head>
<body>
<div style="display: flex; align-items: center; gap: 20px;">
  <img src="https://i.imgur.com/L55qh7b.png" alt="Logo" style="width: 60px; height: auto;">
  <img src="https://i.imgur.com/WzaQvTL.png" alt="Logo" style="width: 45px; height: auto;">
  <h1 style="font-size: 32px; margin: 0;">Checklist de Rotina - Assistente Fiscal CTD</h1>
</div>
<h5>CON-CKL-002 Rev:01</h5>
<!-- Formulário de informações iniciais -->
<div class="form-container" style="display: flex; gap: 20px; align-items: center; flex-wrap: wrap;">
  <div style="flex: 2;">
    <label for="nome">Nome:</label>
    <input type="text" id="nome" name="nome" placeholder="Digite seu nome" required style="width: 100%;">
  </div>

  <div style="flex: 1;">
    <label for="data">Data:</label>
    <input type="date" id="data" name="data" required style="width: 100%;">
  </div>

  <div style="flex: 1;">
    <label for="unidade">Unidade:</label>
    <select id="unidade" name="unidade" required style="width: 100%;">
      <option value="">Selecione</option>
      <option value="TCA">TCA</option>
      <option value="TCV">TCV</option>
      <option value="ABC">ABC</option>
      <option value="MCD">MCD</option>
      <option value="TBL">TBL</option>
      <option value="TPA">TPA</option>
      <option value="TBA">TBA</option>
      <option value="TSJ">TSJ</option>
      <option value="API">API</option>
      <option value="TPH">TPH</option>
      <option value="TCG">TCG</option>
      <option value="TCG">CTD</option>
     
    </select>
  </div>
</div>


<form id="checklistForm">
  <table>
    <thead>
      <tr>
        <th>Horário/Evento</th>
        <th>Atividade</th>
        <th>Documento de Referência</th>
        <th>Ferramenta/Maquinario</th>
        <th>Plano de Reação</th>
        <th>Sim</th>
        <th>Não</th>
      </tr>
    </thead>
    <tbody>
      <script>
        const atividades = [
          ["Semanalmente","Realizar a analise da Apuração do ICMS","CON-POP-009","SICF","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Semanalmente","Buscar Valores das Entradas /ICMS , Saidas ICMS e Servicos Contratados","CON-POP-009","SICF","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Semanalmente","Gerar os Arquivos de Entradas e Saidas ","CON-POP-009","SICF","Acionar o CPD da Unidade /  Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Semanalmente","Fazer a importaçao das Entradas e Saidas do SICF para a Questor","CON-POP-009","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Semanalmente após a importação dos arquivos","Conferir dentro da Questor os valores de Entradas /ICMS , Saidas /ICMS e Serviços","CON-POP-009","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Semanalmente após a importação dos arquivos","Fazer a Identificação das NF's com obrigatoriedade DIFAL (Diferencial de Aliquota)","CON-POP-005","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Semanalmente após a importação dos arquivos","Identificar as NF's  vendas clientes REF -RS","CON-POP-005","Gia-RS","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["A partira da Terça-Feira de cada semana","Separar e Conferir as Notas Fiscais de Compra /Devolução /Consumo/Serviços Contratados /Retenções","-","Arquivo","Acionar ADM da Unidade /CPD"],
          ["A partira da Terça-Feira de cada semana","Realizar o lançamento de notas de serviços em cada Prefeitura","CON-POP-007","Site da Prefeitura","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["No primeiro dia de cada mês","Realizar a 'Analise da Apuração do ICMS","CON-POP-009","SICF","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["No primeiro dia de cada mês","Gerar os Arquivos de Entradas e Saidas /Inventario MT mensal","CON-POP-009","SICF","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["No primeiro dia de cada mês","Realizar a Importaçao das Entradas e Saidas BLOCO K e Inventario MT mensal (SICF para a Questor)","CON-POP-009","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["No primeiro dia de cada mês","Conferir dentro da Questor os valores de Entradas /ICMS , Saidas /ICMS e Serviços","CON-POP-005","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Realizar a contabilização de Entradas e Saidas","CON-POP-005","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Fechar, Contabilizar o ICMS e Gerar e enviar Sped ICMS","CON-POP-005","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Fechar , Contabilizar as Retenções e fechar e enviar o Renf","CON-POP-007","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Fechar, Contabilizar PIS/CONFINS e Gerar e Enviar Sped Pis e Cofins","CON-POP-006","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Realizar a Importação e Conferencia da Folha de Pagamento","CON-POP-013","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Fazer o lançamento dos Alugueis Pagos de Pessoa Fisica com retenção de IRRFno REINF e distribuicao de lucros, caso ocorra","CON-POP-007","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Realizar a conciliacao e ajustes  das contas ativo e passivo da folha de pagamento e dos impostos","-","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Fazer a Conferencia mensal das NF COM RETENCAO, e calculo dos impostos","-","Nota Anota","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Realizar a analize dos balancetes","-","Questor","Acionar Gerente de Contabilidade da Centralizadora"],
          ["Mensalmente","Fechar a  DCTF mensal","CON-POP-008","Aplicativo da Receita Federal","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Realizar a Conferencia e Rateio das Guias Fiscal ,RH","-","Guia de Pagamento","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Mensalmente","Realizar os Lancamentos do Imposto de Renda sobre adiantamento de Salarios","-","Questor","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Até o ultimo dia util do mês de Fevereiro","Fechar DIRF -Inclusão de todas as notas com retenção IRRF, PIS, COFINS , CSLL, Alugueis de pessoa fisica e DL(Distribuição de Lucro","CON-POP-010","Aplicativo da Receita Federal","Acionar Assistente Fiscal da Contabilidade (Centralizadora)"],
          ["Até o ultimo dia util do mês de Maio","Fechar ECD ( EScrituração Contabil Digital)","CON-POP-012","Aplicativo da Receita Federal","Acionar Gerente de Contabilidade da Centralizadora"],
          ["Até o ultimo dia util do mês de Julho","Fechar ECF(Escrituração Contabil Fiscal)","CON-POP-011","Aplicativo da Receita Federal","Acionar Gerente de Contabilidade da Centralizadora"],
          ["Até o mês de Julho de cada Ano","Realizar PAC (Pesquisa Anual do Comercio ) /IBGE","COM-POP-014","Aplicativo do IBGE","Acionar Gerente de Contabilidade da Centralizadora"],
          ];

        for (let i = 0; i < atividades.length; i++) {
          document.write(`
            <tr>
              <td>${atividades[i][0]}</td>
              <td>${atividades[i][1]}</td>
              <td>${atividades[i][2]}</td>
              <td>${atividades[i][3]}</td>
              <td>${atividades[i][4]}</td>
              <td>
                <input type="checkbox" name="atividade_${i+1}" value="Sim"
                  onclick="toggleCheckbox(event, this, 'atividade_${i+1}', 'Sim')">
              </td>
              <td>
                <input type="checkbox" name="atividade_${i+1}" value="Não"
                  onclick="toggleCheckbox(event, this, 'atividade_${i+1}', 'Não')">
              </td>
              <input type="hidden" name="hora_atividade_${i+1}">
              <input type="hidden" name="resposta_atividade_${i+1}">
            </tr>
          `);
        }
      </script>
    </tbody>
  </table>

  <div class="form-container">
    <button type="submit" id="submitBtn">Enviar</button>
  </div>
</form>

<script>
  let formularioEnviado = false;

  window.addEventListener("beforeunload", function (e) {
    if (!formularioEnviado) {
      e.preventDefault();
      e.returnValue = "Você tem certeza que deseja sair? As informações preenchidas serão perdidas.";
    }
  });

  function toggleCheckbox(event, checkbox, nomeAtividade, valorSelecionado) {
    const checkboxes = document.getElementsByName(nomeAtividade);
    checkboxes.forEach(c => {
      if (c !== checkbox) c.checked = false;
    });
    const horaCampo = document.querySelector(`[name=hora_${nomeAtividade}]`);
    const respostaCampo = document.querySelector(`[name=resposta_${nomeAtividade}]`);
    horaCampo.value = new Date().toLocaleString('pt-BR');
    respostaCampo.value = valorSelecionado;
  }

  document.getElementById("checklistForm").addEventListener("submit", function(e) {
    e.preventDefault();
    const nome = document.getElementById("nome").value;
    const data = document.getElementById("data").value;
    const unidade = document.getElementById("unidade").value;

    if (!nome || !data || !unidade) {
      alert("Preencha todos os campos obrigatórios.");
      return;
    }

    let algumaMarcada = false;
    for (let i = 1; i <= atividades.length; i++) {
      const resposta = document.querySelector(`[name=resposta_atividade_${i}]`).value;
      if (resposta === "Sim" || resposta === "Não") {
        algumaMarcada = true;
        break;
      }
    }

    if (!algumaMarcada) {
      alert("Marque pelo menos uma atividade.");
      return;
    }

    if (!confirm("Tem certeza que deseja enviar?")) return;

    const submitBtn = document.getElementById("submitBtn");
    submitBtn.disabled = true;
    submitBtn.textContent = "Enviando...";

    const formData = new FormData(document.getElementById("checklistForm"));
    formData.append("nome", nome);
    formData.append("data", data);
    formData.append("unidade", unidade);

    fetch("https://script.google.com/macros/s/AKfycbw9vjyKfuhDJxx7u0klCtsmLzxxhjgMzsn4Aj-sk5o2xy5EQmj6Q9fwl18lc6iMsflf5A/exec", {
      method: "POST",
      body: formData
    })
    .then(response => response.text())
    .then(data => {
      formularioEnviado = true;
      alert("Dados enviados com sucesso!");
      location.reload();
    })
    .catch(error => {
      alert("Erro ao enviar os dados: " + error);
      submitBtn.disabled = false;
      submitBtn.textContent = "Enviar";
    });
  });
  
</script>
<!-- Botão de ajuda discreto no final da página -->
<div style="text-align: center; margin-top: 60px; margin-bottom: 20px;">
  <a href="mailto:luis.correia@triunfante.com.br,marcelo.portella@triunfante.com.br,raphael.bortot@triunfante.com.br,daniela.nachbar@triunfante.com.br?subject=Ajuda%20-%20Checklist%20Coord%20Adm"
     style="
      display: inline-flex;
      align-items: center;
      gap: 8px;
      background-color: #f1f1f1;
      color: #333;
      padding: 10px 18px;
      border-radius: 6px;
      font-size: 15px;
      text-decoration: none;
      border: 1px solid #ccc;
      transition: all 0.3s ease;
    "
    onmouseover="this.style.backgroundColor='#e2e2e2'"
    onmouseout="this.style.backgroundColor='#f1f1f1'">
    💬 Fale com o suporte
  </a>
</div>

<script>
  window.onload = function () {
    const dataInput = document.getElementById("data");
    const hoje = new Date().toISOString().split("T")[0];
    dataInput.value = hoje;
    dataInput.min = hoje;
    dataInput.max = hoje;
    dataInput.readOnly = true; // impede que o usuário digite manualmente
  };
</script>



</body>




</html>
